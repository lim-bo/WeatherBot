version: '3.9'
services:
  postgres:
    hostname: postgres
    image: postgres:14.8-alpine3.18
    container_name: postgres_container
    ports:
      - 5430:5432
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
      - ../migrations:/docker-entrypoint-initdb.d
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: unless-stopped
    networks:
      - default
  bot_service:
    container_name: bot_service
    links:
      - weather_service
    image: weatherApp/bot
    build:
      context: ../
      dockerfile: deploy/bot/Dockerfile
    depends_on:
      - weather_service
    restart: unless-stopped
    networks:
      - default
  weather_service:
    container_name: weather_service
    links:
      - postgres
    image: weatherApp/service
    restart: always
    environment:
      WAIT_HOSTS: postgres:5432
    depends_on:
      - postgres
      - redis
    ports:
      - 8081:8081
    build: 
      context: ../
      dockerfile: deploy/weather_service/Dockerfile
    networks:
      - default
  redis:
    image: redis:alpine
    container_name: redis_container
    volumes:
      - redisdata:/data
      - ../configs/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD} 
    ports:
      - 6380:6379
    healthcheck:  
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}


    
volumes:
  pgdata:
  redisdata:
