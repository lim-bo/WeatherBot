syntax = "proto3";
// protoc --go-grpc_out=../../internal/weatherApi *.proto
// protoc --go_out=../../internal/weatherApi *.proto
// protoc --go-grpc-gateway_out=../../internal/weatherApi *.proto
// protoc --swagger_out=../swagger/ *.proto



option go_package = ".";
import "google/api/annotations.proto";

package weatherApi;

message City {
    string name = 1;
}

message Cast {
    string text = 1;
}

message User {
    int64 id = 1;
    string city = 2;
    int32 status = 3;
}

message UID {
    int64 value = 1;
}

message Error {
    string text = 1;
}

message IsExist {
    bool value = 2;
}

message WeatherCast {
    int32 statusCode = 1;
    map<string, double> main = 2;
    map<string, double> wind = 3;
    string prefCityName = 4;
}

service WeatherCastService {
    rpc GetCurrentWeather (City) returns (WeatherCast) {
        option (google.api.http) = {
            get: "/v1/weather/{name}"
        };
    }
    rpc MakeCurrentWeatherCast (WeatherCast) returns (Cast) {}
    rpc GetUser (UID) returns (User) {}
    rpc SetUser (User) returns (Error) {}
    rpc CheckUser (UID) returns (IsExist) {}
    rpc CreateUser (UID) returns (Error) {}
}